@page "/editemployer/{EmployerId:int}"

@using IMS.CoreBusiness
@inject EmployerService EmployerService
@inject NavigationManager NavigationManager

<h3>Edit Employer</h3>

@if (employer != null)
{
    <EditForm Model="@employer" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name:</label>
            <InputText id="name" class="form-control" @bind-Value="employer.EmployerName" />
        </div>

        <div class="form-group">
            <label for="position">Position:</label>
            <InputText id="position" class="form-control" @bind-Value="employer.EmployerPosition" />
        </div>

        <div class="form-group">
            <label for="department">Department:</label>
            <InputText id="department" class="form-control" @bind-Value="employer.EmployerDepartment" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}
else
{
    <p>Loading employer details...</p>
}

@code {
    [Parameter] public int EmployerId { get; set; }
    private Employer employer;

    protected override async Task OnInitializedAsync()
    {
        employer = await EmployerService.GetEmployerByIdAsync(EmployerId);
        if (employer == null)
        {
            Console.WriteLine($"Employer with ID {EmployerId} not found.");
            NavigationManager.NavigateTo("/employers");
        }
    }

    private async Task HandleValidSubmit()
    {
        await EmployerService.EditEmployerAsync(employer);
        NavigationManager.NavigateTo("/employers");
    }
}
